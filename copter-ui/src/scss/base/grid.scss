row, column { display: block; }

.row, row {
  @function grid-calc($colNumber, $totalColumns: $grid-columns) {
    @return percentage($colNumber / $totalColumns);
  }
  @mixin grid-columns($className: 'span') {
    @for $col from 1 through $grid-columns {
      &.#{$className}-#{$col} { width: grid-calc($col); }
    }
  }
  @mixin grid-center($className: 'span') {
    &.#{$className}-centered {
      margin-#{$default-float}: auto;
      margin-#{$opposite-float}: auto;
      float: none !important;
      clear: both;
    }
  }
  @mixin grid-offset($className: '') {
    @if($className != '') {
      $className: "#{$className}-";
    }
    @for $col from 1 through $grid-columns {
      &.#{$className}offset-#{$col} { margin-left: grid-calc($col); }
    }
  }
  @mixin grid-ordering($className: '') {
    @if($className != '') {
      $className: "#{$className}-";
    }

    @for $col from 1 through $grid-columns {
      &.#{$className}push-#{$col} { left: grid-calc($col); }
      &.#{$className}pull-#{$col} { right: grid-calc($col); }
    }
  }

  @include clearfix;
  margin: 0 auto;
  padding-left: $grid-gutter/2;
  padding-right: $grid-gutter/2;

  width: 100%;
  max-width: $page-max-width;

  .row, .col > &,
  row, column > & {
    margin-left: -$grid-gutter;
    margin-right: -$grid-gutter;
    width: auto;
    max-width: none;
  }

  .col, column {
    @include clearfix;
    float: $default-float;
    position: relative;
    display: block;
    width: 100%;

    min-height: 1px;
    padding-left: $grid-gutter/2;
    padding-right: $grid-gutter/2;

    &.col-centered {
      margin-#{$default-float}: auto;
      margin-#{$opposite-float}: auto;
      float: none !important;
      clear: both;
    }

    &.right { float: $opposite-float; }

    @each $i in $breakArray {
      @include respond-to(nth($i,1)) { @include grid-columns(nth($i,1)); }

      @include respond-to('#{nth($i,1)}-only') {
        @include grid-center(nth($i,1));
        @include grid-offset(nth($i,1));
        @include grid-ordering(nth($i,1));
      }
    }

    @include grid-offset();
    @include grid-ordering();
  }

  &.row-reverse {
    > .col, > column {
      float: $opposite-float;
    }
  }

  &.no-gutter {
    margin-left: 0;
    margin-right: 0;
    padding-left: 0;
    padding-right: 0;

    > .col, > column {
      padding-left: 0;
      padding-right: 0;
    }
  }
}